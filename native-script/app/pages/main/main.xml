<Page xmlns="http://schemas.nativescript.org/tns.xsd" navigatingTo="onNavigatingTo" class="page">
    <Page.actionBar>
        <ActionBar title="Localized Reminders" icon="" class="action-bar">
            <android>
                <NavigationButton icon="res://ic_menu" tap="onHamburger" />
            </android>
            <ios>
                <ActionItem icon="res://ic_menu" ios.position="left" tap="onHamburger" />
            </ios>

            <ActionItem tap="onSettings" icon="res://ic_settings" ios.position="right" text="Settings" android.position="popup"></ActionItem>
        </ActionBar>
    </Page.actionBar>
    <!--
    The StackLayout stacks UI components on the screenâ€”either vertically or horizontally.
    In this case, the StackLayout does vertical stacking; you can change the stacking to
    horizontal by applying a orientation="horizontal" attribute to the <StackLayout> element.
    You can learn more about NativeScript layouts at
    https://docs.nativescript.org/ui/layout-containers.

    These components make use of several CSS class names that are part of the NativeScript
    core theme, such as p-20, btn, h2, and text-center. You can view a full list of the
    class names available for styling your app at https://docs.nativescript.org/ui/theme.
    -->
    <StackLayout class="p-20">
        <Label text="Tap the button" class="h1 text-center"/>
        <Button text="TAP" tap="{{ onTap }}" class="btn btn-primary btn-active"/>
        <Label text="{{ message }}" class="h2 text-center" textWrap="true"/>

        <ListView items="{{ groceryList }}" itemTemplateProperty="list-group" itemTap="navigateToTasks" separatorColor="white">
            <ListView.itemTemplate>
                <template>
                    <Label text="{{ name }}" class="list-group-item-heading"  />
                </template>
            </ListView.itemTemplate>
        </ListView>
    </StackLayout>
</Page>
